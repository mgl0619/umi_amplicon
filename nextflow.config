// Global nextflow configuration file for 'umi-amplicon'
// This file configures the core Nextflow options which can be overridden in a pipeline-specific configuration file

// Manifest
manifest {
    name            = 'umi-amplicon'
    author          = 'AI Development Team'
    homePage        = 'https://github.com/nf-core/umi-amplicon'
    description     = 'nf-core/umi-amplicon: UMI-tagged amplicon sequencing analysis pipeline'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0.0'
}

// Load base.config by default for all processes
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig 'conf/custom.config'
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}")
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Load nf-core/config profiles
profiles {
    debug { process.beforeScript = 'echo $HOSTNAME' }
    conda {
        conda.enabled    = true
        docker.enabled   = false
        singularity.enabled = false
        podman.enabled   = false
        shifter.enabled  = false
        charliecloud.enabled = false
    }
    mamba {
        conda.enabled    = true
        conda.useMamba   = true
        docker.enabled   = false
        singularity.enabled = false
        podman.enabled   = false
        shifter.enabled  = false
        charliecloud.enabled = false
    }
    docker {
        docker.enabled   = true
        docker.userEmulation = true
        singularity.enabled = false
        podman.enabled   = false
        shifter.enabled  = false
        charliecloud.enabled = false
    }
    singularity {
        singularity.enabled  = true
        singularity.autoMounts = true
        docker.enabled       = false
        podman.enabled       = false
        shifter.enabled      = false
        charliecloud.enabled = false
    }
    podman {
        podman.enabled   = true
        docker.enabled   = false
        singularity.enabled = false
        shifter.enabled  = false
        charliecloud.enabled = false
    }
    shifter {
        shifter.enabled  = true
        docker.enabled   = false
        singularity.enabled = false
        podman.enabled   = false
        charliecloud.enabled = false
    }
    charliecloud {
        charliecloud.enabled = true
        docker.enabled       = false
        singularity.enabled  = false
        podman.enabled       = false
        shifter.enabled      = false
    }
    gitpod {
        executor.name = 'local'
        executor.cpus = 16
        executor.memory = 60.GB
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA_* variables are used by Julia packages
env {
    PYTHONNOUSERSITE = 1
    R_LIBS_USER = ''
    JULIA_DEPOT_PATH = ''
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.svg"
}

manifest {
    name            = 'umi-amplicon'
    author          = 'AI Development Team'
    homePage        = 'https://github.com/your-org/umi-amplicon'
    description     = 'nf-core/umi-amplicon: UMI-tagged amplicon sequencing analysis pipeline'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=23.04.0'
    version         = '1.0.0'
}

