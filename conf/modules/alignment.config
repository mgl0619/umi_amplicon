/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options for alignment and statistics
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
    // BWA alignment
    withName: 'BWA_INDEX' {
        publishDir = [
            path: { "${params.outdir}/bwa/index" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BWA_MEM' {
        publishDir = [
            path: { "${params.outdir}/bwa" },
            mode: params.publish_dir_mode,
            pattern: "*.bam",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Samtools modules
    withName: 'SAMTOOLS_INDEX' {
        publishDir = [
            path: { "${params.outdir}/bwa" },
            mode: params.publish_dir_mode,
            pattern: "*.{bai,csi}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_STATS' {
        publishDir = [
            path: { "${params.outdir}/samtools/stats" },
            mode: params.publish_dir_mode,
            pattern: "*.stats",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_FLAGSTAT' {
        publishDir = [
            path: { "${params.outdir}/samtools/flagstat" },
            mode: params.publish_dir_mode,
            pattern: "*.flagstat",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_IDXSTATS' {
        publishDir = [
            path: { "${params.outdir}/samtools/idxstats" },
            mode: params.publish_dir_mode,
            pattern: "*.idxstats",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // Picard modules
    withName: 'PICARD_COLLECTALIGNMENTSUMMARYMETRICS' {
        publishDir = [
            path: { "${params.outdir}/picard/alignment_summary" },
            mode: params.publish_dir_mode,
            pattern: "*.txt",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'PICARD_COLLECTINSERTSIZEMETRICS' {
        publishDir = [
            path: { "${params.outdir}/picard/insert_size" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt,pdf}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // mosdepth
    withName: 'MOSDEPTH' {
        publishDir = [
            path: { "${params.outdir}/mosdepth" },
            mode: params.publish_dir_mode,
            pattern: "*.{txt,gz,csi}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // MultiQC
    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // FastQC
    withName: 'FASTQC' {
        publishDir = [
            path: { "${params.outdir}/fastqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    // UMI QC metrics (post-UMI extraction)
    withName: 'UMI_QC_METRICS_POSTUMIEXTRACT' {
        publishDir = [
            [
                path: { "${params.outdir}/umi_qc_metrics" },
                mode: params.publish_dir_mode,
                pattern: "*.{txt,json,png,html}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : "before_dedup/${filename}" }
            ]
        ]
    }

    withName: 'UMI_QC_METRICS_POSTDEDUP' {
        publishDir = [
            [
                path: { "${params.outdir}/umi_qc_metrics" },
                mode: params.publish_dir_mode,
                pattern: "*.{txt,json,png,html}",
                saveAs: { filename -> filename.equals('versions.yml') ? null : "after_dedup/${filename}" }
            ]
        ]
    }
}
